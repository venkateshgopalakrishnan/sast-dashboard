{"version":3,"sources":["components/ResultsList.js","components/Dashboard.js","components/AboutPage.js","components/ResultForm.js","components/ResultPage.js","components/common/Header.js","components/NotFoundPage.js","components/App.js","index.js"],"names":["ResultsList","props","className","results","reverse","map","result","index","fields","findings","finding","metadata","severity","key","pk","repo_name","status","to","Label","Icon","name","color","ruleId","length","queued_at","scanning_at","finished_at","defaultProps","baseUrl","a","fetch","response","ok","message","Error","json","Dashboard","useState","setResults","useEffect","isMounted","getResults","then","_results","catch","error","console","log","Container","style","textAlign","AboutPage","Jumbotron","fluid","fontSize","ResultForm","errors","setErrors","date","time","findings_box","setResult","handleFindingsChange","target","value","newFindings","f","i","handleChange","formIsValid","_errors","Object","keys","handleSubmit","event","preventDefault","status_time","rule_id","type","description","requestOptions","method","body","JSON","stringify","history","push","toast","success","Form","onSubmit","Row","Group","as","Col","Control","onChange","id","placeholder","defaultValue","disabled","Button","float","variant","onClick","renderFindings","ResultPage","items","setItems","getResultById","match","params","_result","header","meta","Card","centered","Header","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","NotFoundPage","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.73ec27d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nfunction ResultsList(props) {\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>S.no</th>\r\n            <th>Repo Name</th>\r\n            <th>Status</th>\r\n            <th>Findings</th>\r\n            <th>Timestamp</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.results.reverse().map((result, index) => {\r\n            const severity = result.fields.findings.map((finding) => {\r\n              return finding.metadata.severity;\r\n            });\r\n            // console.log(result);\r\n            return (\r\n              <tr key={result.pk}>\r\n                <td>{index + 1}</td>\r\n                <td>{result.fields.repo_name}</td>\r\n                <td>{result.fields.status}</td>\r\n                <td>\r\n                  <Link to={\"view/\" + result.pk}>\r\n                    <Label>\r\n                      <Icon name=\"bomb\" color=\"red\" />{\" \"}\r\n                      {result.fields.findings[0]?.ruleId &&\r\n                      result.fields.findings[0].ruleId === null\r\n                        ? 0\r\n                        : result.fields.findings.length}\r\n                    </Label>\r\n                  </Link>\r\n                </td>\r\n                <td>\r\n                  {result.fields.queued_at ||\r\n                    result.fields.scanning_at ||\r\n                    result.fields.finished_at}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nResultsList.propTypes = {\r\n  results: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      pk: PropTypes.number.isRequired,\r\n      fields: PropTypes.shape({\r\n        repo_name: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        findings: PropTypes.array.isRequired,\r\n        queued_at: PropTypes.string,\r\n        scanned_at: PropTypes.string,\r\n        finished_at: PropTypes.string,\r\n      }).isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nResultsList.defaultProps = {\r\n  results: [],\r\n};\r\n\r\nexport default ResultsList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ResultsList from \"./ResultsList\";\r\nconst baseUrl = \"http://localhost:8000/\";\r\n\r\nasync function getResults() {\r\n  const response = await fetch(baseUrl + \"get-all-results/\");\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n  const results = await response.json();\r\n  return results;\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [results, setResults] = useState([]);\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getResults()\r\n      .then((_results) => {\r\n        if (isMounted) setResults(_results);\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Results Dashboard</h2>\r\n        <Link className=\"btn btn-primary\" to=\"/add\">\r\n          Add\r\n        </Link>\r\n      </div>\r\n      <br /> <ResultsList results={results} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Jumbotron, Container } from \"react-bootstrap\";\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Jumbotron fluid>\r\n      <Container>\r\n        <h1>About Nanoheal</h1>\r\n        <br />\r\n        <p style={{ fontSize: 20 }}>\r\n          Nanoheal provides automated, cognitive device user experience\r\n          management software for brands of all sizes. Our innovative, patented\r\n          platform provides companies ranging from Enterprise Help Desks to\r\n          Small Businesses and Support Providers with everything needed to\r\n          optimize the automated management of end-user devices.\r\n        </p>\r\n\r\n        <p style={{ fontSize: 20 }}>\r\n          Our solutions give companies total transparency and complete control\r\n          over every level of user interaction – all with the fastest, most\r\n          forward-thinking, future proof technology in the industry. Whether a\r\n          desktop, laptop, tablet, smart phone, or IoT device, with Nanoheal you\r\n          are covered.\r\n        </p>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Col, Button, Container } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst baseUrl = \"http://localhost:8000/\";\r\n\r\nconst ResultForm = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const [result, setResult] = useState({\r\n    repo_name: \"\",\r\n    status: \"Queued\",\r\n    date: \"\",\r\n    time: \"\",\r\n    findings: [],\r\n    findings_box: 1,\r\n  });\r\n\r\n  const handleFindingsChange = ({ target }, index) => {\r\n    const finding = result.findings[index];\r\n    finding[target.name] = target.value;\r\n    // }\r\n    const newFindings = result.findings.map((f, i) => {\r\n      if (i !== index) {\r\n        return f;\r\n      }\r\n      return finding;\r\n    });\r\n    setResult({ ...result, findings: newFindings });\r\n  };\r\n\r\n  const handleChange = ({ target }) => {\r\n    setResult({ ...result, [target.name]: target.value });\r\n  };\r\n\r\n  const formIsValid = () => {\r\n    const _errors = {};\r\n    if (!result.repo_name) _errors.repo_name = \"Repo name is required\";\r\n    if (!result.status) _errors.status = \"Status is required\";\r\n    if (!result.date) _errors.date = \"Date is required\";\r\n    if (!result.time) _errors.date = \"Time is required\";\r\n    setErrors(_errors);\r\n    //Form is valid if errors object is empty\r\n    return Object.keys(_errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!formIsValid()) return;\r\n    const json = {\r\n      repo_name: result.repo_name,\r\n      status: result.status,\r\n      status_time: result.date + \" \" + result.time,\r\n      findings: result.findings.map((finding) => {\r\n        return {\r\n          ruleId: finding.rule_id,\r\n          type: finding.type,\r\n          metadata: {\r\n            severity: finding.severity,\r\n            description: finding.description,\r\n          },\r\n        };\r\n      }),\r\n    };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(json),\r\n    };\r\n    const response = await fetch(baseUrl + \"add-result/\", requestOptions);\r\n\r\n    if (!response.ok) {\r\n      const message = `An error has occured: ${response.status}`;\r\n      throw new Error(message);\r\n    } else {\r\n      props.history.push(\"/\");\r\n      toast.success(\"Course Saved\");\r\n    }\r\n  };\r\n\r\n  const renderFindings = (i) => {\r\n    return (\r\n      <div>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Type</Form.Label>\r\n            <Form.Control\r\n              //   value={result.findings[i].type}\r\n              id=\"type\"\r\n              name=\"type\"\r\n              as=\"select\"\r\n              onChange={(event) => {\r\n                handleFindingsChange(event, i);\r\n              }}\r\n              defaultValue=\"----\"\r\n            >\r\n              <option disabled>----</option>\r\n              <option value=\"DAST\">DAST</option>\r\n              <option value=\"SAST\">SAST</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Rule ID</Form.Label>\r\n            <Form.Control\r\n              value={result.findings[i].rule_id}\r\n              onChange={(event) => {\r\n                handleFindingsChange(event, i);\r\n              }}\r\n              id=\"rule_id\"\r\n              type=\"text\"\r\n              name=\"rule_id\"\r\n              placeholder=\"Enter rule id\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Severity</Form.Label>\r\n            <Form.Control\r\n              //   value={result.findings[i].severity}\r\n              id=\"severity\"\r\n              name=\"severity\"\r\n              as=\"select\"\r\n              onChange={(event) => {\r\n                handleFindingsChange(event, i);\r\n              }}\r\n              defaultValue=\"----\"\r\n            >\r\n              <option disabled>----</option>\r\n              <option value=\"High\">High</option>\r\n              <option value=\"Medium\">Medium</option>\r\n              <option value=\"Low\">Low</option>\r\n              <option value=\"Informational\">Informational</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              value={result.findings[i].description}\r\n              onChange={(event) => {\r\n                handleFindingsChange(event, i);\r\n              }}\r\n              id=\"description\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Describe the vulnerability\"\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <br />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Add Scan Result</h2>\r\n        <Link className=\"btn btn-secondary\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <br />\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Repo Name</Form.Label>\r\n            <Form.Control\r\n              value={result.repo_name}\r\n              onChange={handleChange}\r\n              id=\"repo_name\"\r\n              type=\"text\"\r\n              name=\"repo_name\"\r\n              placeholder=\"Enter repository name\"\r\n              error={errors.repo_name}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Status</Form.Label>\r\n            <Form.Control\r\n              id=\"status\"\r\n              name=\"status\"\r\n              as=\"select\"\r\n              onChange={handleChange}\r\n              defaultValue=\"----\"\r\n              error={errors.status}\r\n            >\r\n              <option disabled>----</option>\r\n              <option value=\"Queued\">Queued</option>\r\n              <option value=\"In Progress\">In Progress</option>\r\n              <option value=\"Success\">Success</option>\r\n              <option value=\"Failure\">Failure</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {(result.status === \"Success\" || result.status === \"Failure\") && (\r\n          <>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              variant=\"secondary\"\r\n              type=\"button\"\r\n              onClick={() =>\r\n                setResult({\r\n                  ...result,\r\n                  findings: [...result.findings, {}],\r\n                  [result.findings_box]: [result.findings_box + 1],\r\n                })\r\n              }\r\n            >\r\n              Add\r\n            </Button>\r\n            <h3>Findings</h3>\r\n            {\"  \"}\r\n            {result.findings.map((f, i) => renderFindings(i))}\r\n          </>\r\n        )}\r\n\r\n        <Form.Row>\r\n          <Form.Group>\r\n            <Form.Label>Select Date</Form.Label>\r\n            <Form.Control\r\n              value={result.date}\r\n              onChange={handleChange}\r\n              id=\"date\"\r\n              type=\"date\"\r\n              name=\"date\"\r\n              placeholder=\"Date\"\r\n              error={errors.date}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Select Time</Form.Label>\r\n            <Form.Control\r\n              value={result.time}\r\n              onChange={handleChange}\r\n              id=\"time\"\r\n              type=\"time\"\r\n              name=\"time\"\r\n              placeholder=\"Time\"\r\n              error={errors.time}\r\n            />\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst baseUrl = \"http://localhost:8000/\";\r\n\r\nasync function getResultById(pk) {\r\n  const response = await fetch(baseUrl + \"get-result/\" + pk);\r\n  if (!response.ok) {\r\n    const message = `An error has occured: ${response.status}`;\r\n    throw new Error(message);\r\n  }\r\n  const result = await response.json();\r\n  return result;\r\n}\r\n\r\nconst ResultPage = (props) => {\r\n  const [result, setResult] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getResultById(props.match.params.pk)\r\n      .then((_result) => {\r\n        if (isMounted) {\r\n          setResult(_result);\r\n          setItems(\r\n            _result.findings.map((finding) => {\r\n              return {\r\n                header: finding.ruleId,\r\n                description: finding.metadata.description,\r\n                meta: finding.metadata.severity,\r\n              };\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.log(error.message));\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <br />\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>{result.repo_name}</h2>\r\n        <Link className=\"btn btn-secondary\" to=\"/\">\r\n          Back\r\n        </Link>\r\n      </div>\r\n      <br />\r\n      <Card.Group centered items={items} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nfunction Header() {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">Nanoheal</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav>\r\n            <Link to=\"/\" className=\"btn btn-secondary\">\r\n              Dashboard\r\n            </Link>\r\n          </Nav>\r\n          &nbsp;&nbsp;\r\n          <Nav>\r\n            <Link to=\"/add\" className=\"btn btn-secondary\">\r\n              Add New\r\n            </Link>\r\n          </Nav>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav>\r\n            <Link to=\"/about\" className=\"btn btn-secondary\">\r\n              About\r\n            </Link>\r\n          </Nav>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <h2>Page not found</h2>\r\n      <p>\r\n        <Link to=\"/\"> Back to Home</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport ResultForm from \"./ResultForm\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport Header from \"./common/Header\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <Container>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/about\" component={AboutPage} />\r\n          <Route path=\"/view/:pk\" component={ResultPage} />\r\n          <Route path=\"/add\" component={ResultForm} />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}